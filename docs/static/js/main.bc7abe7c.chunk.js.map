{"version":3,"sources":["utils/cookie.ts","stores/audio.ts","stores/gameState.ts","stores/items.ts","data/levels/level1.ts","data/rooms/level1.ts","stores/monster.ts","utils/numbers.ts","dataObjects/LevelMap.ts","constants.ts","stores/levels.ts","stores/messages.ts","stores/player.ts","components/ComponentWithGameContext.tsx","components/AudioPlayer.tsx","components/GlobalControls.tsx","components/Header.tsx","components/CharacterInfoPanel.tsx","components/CharacterStats.tsx","components/EncounterPane.tsx","components/InventoryPanel.tsx","stores/guilds.ts","utils/combat.ts","controllers/exploreController.ts","components/MapPanel.tsx","components/MessagesPanel.tsx","controllers/gameController.ts","components/DeathModal.tsx","screens/ExploreScreen.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getCookie","cookieName","cookie","document","split","find","individualCookie","trim","setCookie","cookieValue","audioStore","playerAudioRef","React","createRef","toggleAudioOn","soundEnabled","this","checkForSoundEnabled","type","audio","player","current","paused","src","play","observable","gameStateStore","gameState","currentMonsterAttackResult","undefined","currentPlayerAttackResult","currentRoom","currentTargettedGroup","room","cloneDeep","console","log","toJS","currentFighter","isFighting","setCurrentFighter","currentAttackResult","damage","groups","length","checkAndFilterCurrentGroups","currentGroup","currentMonsterHealth","monsterHealth","slice","filter","group","action","itemsStore","0","name","baseValue","canBeEquiped","equipmentType","1","2","3","4","level1Data","coords","leftWall","topWall","terrain","roomId","levelOneRoomInitData","monsterGroupIds","description","monsters","hp","atk","def","xp","gold","guild","maxLevel","profileImage","alignment","canSteal","stats","strength","intelligence","wisdom","constitution","charisma","dexterity","monsterGroups","monsterId","minCount","maxCount","monsterStore","getCount","Math","round","random","getPlusMinusTwentyPercentInteger","integerAmount","multiplyingFactor","getRandomFromList","list","LevelMap","level","size","randomise","setAllMapDiscovered","levelSections","levelRooms","discoveredSections","markSectionDiscovered","tile","modifier","isSectionDiscovered","populateMap","randomlyPopulateMap","ycord","xcord","push","getRandomWall","getRandomTerrain","populateRooms","roomKey","populateRoom","parseInt","roomInitData","monsterGroupId","monsterGroup","id","map","monster","Array","monsterStatus","populateDiscoveredSections","randomWall","boundingOffsetMap","west","north","east","south","offsetMap","movementOffsetMap","clockwiseRotationMap","counterClockwiseRotationMap","turnAroundMap","levelStore","toggleRandomMaps","useRandomMaps","checkForRandomMaps","level1","playerLocation","playerDirection","offset","wallOffset","sectionWithWall","section","startLocation","messageStore","messagePanelScrollRef","addMessage","text","messages","scrollMessagesToBottom","messagePanelScrollRefElement","scrollTop","scrollHeight","playerDefaults","age","maxHits","currentHits","experience","playerInventory","itemId","equippedRightHand","equippedLeftHand","equippedHelmet","equippedBodyArmour","equippedHandArmour","guilds","playerStore","setPlayerLocation","rotatePlayerClockwise","rotatePlayerCounterClockwise","turnAround","setDead","hurtPlayer","calculateAtk","calculateDef","loadDefaults","Object","assign","gameContextDefaultValue","gameContext","ComponentWithGameContext","context","contextType","AudioPlayer","observer","ref","GlobalControls","className","onClick","alt","Header","CharacterInfoPanel","currentLevel","sex","race","key","tabs","CharacterStats","props","changeTab","activeTab","setState","state","tabInfo","Component","comboCoordinates","offsetOne","offsetTwo","EncounterPane","getWallFaces","front","getWallFace","frontLeft","frontRight","forwardFront","forwardFrontLeft","forwardFrontRight","left","forwardLeft","right","forwardRight","getFloors","getFloor","forward","getCurrentRoom","attacker","attackResult","isUndefined","wallFaces","floors","roomData","getCombatMessage","index","InventoryPanel","inventoryItem","inventoryIndex","item","charAt","guildsStore","xpScale","guildFightingMod","getDamageModifier","damageModifer","pow","guildStore","getGuildFightingMod","calculateFightDamage","defender","strengthStat","guildLevel","strengthValue","floor","strengthModifierOne","strengthModifierTwo","keyDirection","37","38","39","40","70","exploreController","handleKeyDown","event","keyCode","startFight","fight","moveDirection","toUpperCase","playAudio","direction","checkMoveWallCollision","movementOffset","checkAndChangeRoom","levelSection","getSectionByCoords","newRoomId","currentRoomId","newRoom","setCurrentRoom","calculateIsFighting","setCurrentAttackResult","hurtcurrentTargettedGroup","setTimeout","boundingOffset","boundingSection","window","addEventListener","removeEventListener","MapPanel","setupKeyboardListeners","removeKeyboardListeners","style","width","height","isPlayerLocation","getSectionDiscovered","wallClasses","sectionClass","MessagesPanel","message","gameController","reset","DeathModal","ExploreScreen","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bc7abe7c.chunk.js","sourcesContent":["export function getCookie(cookieName: string) {\n  const cookie = document.cookie.split(\";\").find(individualCookie => individualCookie.split(\"=\")[0].trim() === cookieName);\n  if (cookie) {\n    return cookie.split(\"=\")[1];\n  } else {\n    return 'false';\n  }\n}\n\nexport function setCookie(cookieName: string, cookieValue: string) {\n  document.cookie = `${cookieName}=${cookieValue}`;\n}","import React from 'react';\nimport { observable } from 'mobx';\nimport { getCookie, setCookie } from '../utils/cookie';\n\ninterface AudioTrack {\n  src: string;\n}\n\nexport class AudioStore {\n  @observable soundEnabled: boolean;\n  @observable player: {[key: string]: AudioTrack} = {\n    'hitwall': {src: '/murdur-rpg-system/audio/ouch.mp3'},\n  };\n  public playerAudioRef: React.RefObject<HTMLAudioElement> = React.createRef();\n\n  constructor() {\n    this.soundEnabled = this.checkForSoundEnabled();\n  }\n\n  playAudio(type: string, audio: string) {\n    if(type === 'player' && this.player[audio] && this.playerAudioRef.current && this.soundEnabled && this.playerAudioRef.current.paused){\n      this.playerAudioRef.current.src = this.player[audio].src;\n      this.playerAudioRef.current.play();\n    }\n  }\n\n  checkForSoundEnabled(): boolean {\n    if(getCookie('soundEnabled') === 'true') {\n      return true;\n    } else {\n      setCookie('soundEnabled', 'false');\n      return false;\n    }\n  }\n\n  toggleAudioOn = () => {\n    setCookie('soundEnabled', `${!this.soundEnabled}`)\n    this.soundEnabled = !this.soundEnabled;\n  }\n}\n\nconst audioStore = new AudioStore();\n\nexport default audioStore;","import { action, observable, toJS } from 'mobx';\nimport cloneDeep from 'lodash/cloneDeep';\n\ntype GameState = 'EXPLORE' | 'DEAD';\n\nexport class GameStateStore {\n  @observable currentMonsterAttackResult?: AttackResult;\n  @observable currentPlayerAttackResult?: AttackResult;\n  @observable currentRoom?: RoomData;\n  @observable currentTargettedGroup: 0 | 1 | 2 | 3 = 0;\n  @observable gameState: GameState = 'EXPLORE';\n\n  @action reset(gameState?: GameState) {\n    this.currentMonsterAttackResult = undefined;\n    this.currentPlayerAttackResult = undefined;\n    this.currentRoom = undefined;\n    this.currentTargettedGroup = 0;\n    this.gameState = gameState || 'EXPLORE';\n  }\n\n  @action setCurrentRoom(room?: RoomData) {\n    this.currentRoom = cloneDeep(room);\n    this.currentMonsterAttackResult = undefined;\n    this.currentPlayerAttackResult = undefined;\n    console.log(toJS(this.currentRoom));\n  }\n\n  @action startFight(currentFighter: CurrentFighter) {\n    if(this.currentRoom && !this.currentRoom.isFighting) {\n      this.currentRoom.isFighting = true;\n      this.setCurrentFighter(currentFighter);\n    }\n  }\n\n  @action setCurrentFighter(currentFighter: CurrentFighter) {\n    if(this.currentRoom) {\n      this.currentRoom = {...this.currentRoom, currentFighter};\n    }\n  }\n\n  @action setCurrentAttackResult(currentFighter: CurrentFighter, currentAttackResult: AttackResult) {\n    console.log('fight!', currentFighter, currentAttackResult);\n      if(currentFighter === 'player') {\n        this.currentPlayerAttackResult = currentAttackResult === 0 ? 'missed' : currentAttackResult;\n      } else if (typeof currentFighter === 'number') {\n        this.currentMonsterAttackResult = currentAttackResult === 0 ? 'missed' : currentAttackResult;\n      }\n  }\n\n  @action hurtcurrentTargettedGroup(damage: number) {\n    if(this.currentRoom && this.currentRoom.groups.length) {\n      this.checkAndFilterCurrentGroups();\n      if(!this.currentRoom.groups[this.currentTargettedGroup]) {\n        this.currentTargettedGroup = 0;\n      }\n      const currentGroup = this.currentRoom.groups[this.currentTargettedGroup];\n      const currentMonsterHealth = currentGroup.monsterHealth[currentGroup.monsterHealth.length - 1];\n      if(currentMonsterHealth && currentMonsterHealth - damage > 0) {\n        currentGroup.monsterHealth[currentGroup.monsterHealth.length - 1] = currentMonsterHealth - damage;\n      } else if (currentMonsterHealth && currentMonsterHealth - damage <= 0) {\n        currentGroup.monsterHealth = currentGroup.monsterHealth.slice(0, currentGroup.monsterHealth.length - 1);\n        this.currentRoom.groups[this.currentTargettedGroup] = currentGroup;\n      }\n      this.checkAndFilterCurrentGroups();\n    }\n  }\n\n  checkAndFilterCurrentGroups() {\n    if(this.currentRoom && this.currentRoom.groups.length) {\n      this.currentRoom.groups = this.currentRoom.groups.filter(group => {\n        return group.monsterHealth.length > 0;\n      })\n    }\n    if(this.currentRoom && this.currentRoom.groups.length === 0) {\n      this.currentRoom.isFighting = false;\n    }\n  }\n\n  @action setDead() {\n    console.log(\"this.gameState = 'DEAD'\");\n    this.gameState = 'DEAD';\n  }\n}\n\nconst gameStateStore = new GameStateStore();\n\nexport default gameStateStore;","const itemsStore: {[key: number]: InventoryItem} = {\n  0: { name: 'Iron Sword', baseValue: 10, canBeEquiped: true, equipmentType: 'weapon' },\n  1: { name: 'Iron Shield', baseValue: 10, canBeEquiped: true, equipmentType: 'shield' },\n  2: { name: 'Iron Helmet', baseValue: 10, canBeEquiped: true, equipmentType: 'head-armour' },\n  3: { name: 'Iron Cuirass', baseValue: 10, canBeEquiped: true, equipmentType: 'body-armour' },\n  4: { name: 'Iron Bracers', baseValue: 10, canBeEquiped: true, equipmentType: 'hand-armour' }\n}\n\nexport default itemsStore;\n\n// { name: '', baseValue: 1, alignment: 'good', canBeEquiped: true, equipmentType: 'weapon' }","const level1Data: SectionData[] = [\n  {coords : [0,0], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,0], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [3,0], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [4,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,0], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [8,0], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [9,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [10,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,0], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [12,0], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [13,0], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,0], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [15,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [16,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [19,0], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,0], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [21,0], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [22,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [23,0], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,0], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,0], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,0], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [27,0], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [28,0], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,0], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [0,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [1,1], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [2,1], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [3,1], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [4,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [6,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,1], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [9,1], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [10,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,1], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [12,1], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [14,1], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [15,1], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [16,1], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [19,1], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [20,1], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,1], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,1], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [23,1], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,1], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [26,1], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [27,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,1], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,1], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,2], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [1,2], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [2,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [3,2], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [4,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,2], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [11,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [12,2], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [15,2], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [16,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,2], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [19,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,2], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,2], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [22,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [23,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [24,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,2], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [26,2], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [27,2], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,2], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,2], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,3], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [1,3], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [2,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,3], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [4,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [7,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,3], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [11,3], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [12,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,3], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [16,3], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,3], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,3], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [19,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [23,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,3], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [25,3], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [26,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,3], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,3], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [0,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [1,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [2,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,4], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,4], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [8,4], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [9,4], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [10,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [11,4], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [12,4], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [13,4], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [14,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [15,4], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [16,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,4], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [18,4], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [19,4], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [20,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [23,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,4], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [25,4], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,4], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,4], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,4], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [1,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [3,5], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,5], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,5], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,5], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,5], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [9,5], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [10,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [12,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [15,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [16,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,5], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,5], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [22,5], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [23,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,5], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [25,5], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [27,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,5], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,5], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [0,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [1,6], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [2,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,6], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [4,6], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [5,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [6,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [7,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [10,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [11,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [12,6], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [13,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [15,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,6], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [18,6], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [19,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,6], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [23,6], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [24,6], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [25,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,6], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [27,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [28,6], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,6], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,7], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,7], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [6,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [7,7], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [14,7], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [15,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,7], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,7], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [18,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [19,7], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [20,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,7], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,7], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [23,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,7], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [26,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [27,7], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [28,7], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,7], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [1,8], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [2,8], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [3,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,8], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,8], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [8,8], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [10,8], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [11,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [12,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [14,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [15,8], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [16,8], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [17,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,8], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [20,8], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,8], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [22,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,8], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [24,8], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [25,8], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [26,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [27,8], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [28,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,8], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [2,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [6,9], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [7,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [8,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [10,9], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,9], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [12,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [14,9], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [15,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,9], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [20,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,9], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [23,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [24,9], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,9], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,9], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [27,9], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [28,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,9], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [2,10], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [3,10], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,10], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [7,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,10], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [10,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [13,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,10], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [16,10], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [17,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [18,10], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [19,10], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [20,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,10], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [24,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [25,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [28,10], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,10], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [6,11], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [7,11], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [10,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [11,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [12,11], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [13,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,11], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [16,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,11], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [22,11], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [23,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,11], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [25,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [26,11], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,11], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [28,11], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [29,11], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,12], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [1,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,12], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [3,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [4,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [6,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [11,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [12,12], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [13,12], leftWall: 'door', topWall: 'door', terrain: 'none', roomId: 1},\n  {coords: [14,12], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [15,12], leftWall: 'wall', topWall: 'none', terrain: 'none', roomId: 0},\n  {coords: [16,12], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [17,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [18,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [19,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,12], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [21,12], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [22,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,12], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [25,12], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [26,12], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [27,12], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,12], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,13], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [1,13], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [2,13], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,13], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,13], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,13], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [7,13], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,13], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,13], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [10,13], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,13], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [12,13], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [13,13], leftWall: 'wall', topWall: 'none', terrain: 'none', roomId: 1},\n  {coords: [14,13], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [15,13], leftWall: 'wall', topWall: 'none', terrain: 'none', roomId: 0},\n  {coords: [16,13], leftWall: 'none', topWall: 'door', terrain: 'none', roomId: 0},\n  {coords: [17,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,13], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,13], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,13], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [21,13], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [22,13], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [23,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [24,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,13], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,13], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [27,13], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [28,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,13], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,14], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [2,14], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [3,14], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,14], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,14], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,14], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [7,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,14], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [9,14], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [10,14], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [11,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [12,14], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,14], leftWall: 'none', topWall: 'none', terrain: 'none', roomId: 1},\n  {coords: [14,14], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [15,14], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [16,14], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,14], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [20,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,14], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [23,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,14], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [25,14], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,14], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [27,14], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,14], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,14], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [0,15], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [1,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [3,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,15], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [6,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,15], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,15], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [12,15], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,15], leftWall: 'wall', topWall: 'none', terrain: 'none', roomId: 1},\n  {coords: [14,15], leftWall: 'wall', topWall: 'door', terrain: 'water', roomId: 3},\n  {coords: [15,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [16,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,15], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [19,15], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,15], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [22,15], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [23,15], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,15], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,15], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [27,15], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [28,15], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,15], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,16], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [2,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,16], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,16], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [5,16], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [7,16], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [8,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,16], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [10,16], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [11,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,16], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,16], leftWall: 'door', topWall: 'none', terrain: 'water', roomId: 3},\n  {coords: [15,16], leftWall: 'none', topWall: 'wall', terrain: 'water', roomId: 3},\n  {coords: [16,16], leftWall: 'none', topWall: 'door', terrain: 'water', roomId: 3},\n  {coords: [17,16], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [18,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,16], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [23,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [24,16], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,16], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [28,16], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,16], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [1,17], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [2,17], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [3,17], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,17], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,17], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,17], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [7,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [8,17], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [10,17], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,17], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [12,17], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,17], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,17], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [15,17], leftWall: 'wall', topWall: 'none', terrain: 'water', roomId: 3},\n  {coords: [16,17], leftWall: 'none', topWall: 'none', terrain: 'water', roomId: 3},\n  {coords: [17,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,17], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [19,17], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [20,17], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [21,17], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [22,17], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,17], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [24,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,17], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [27,17], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [28,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,17], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,18], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [1,18], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [2,18], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [3,18], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [4,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [7,18], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [8,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,18], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [12,18], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [15,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [16,18], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [17,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [19,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,18], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [23,18], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [24,18], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [25,18], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,18], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,18], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [28,18], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [29,18], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,19], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [1,19], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [2,19], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [3,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,19], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,19], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [6,19], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [7,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,19], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [9,19], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [10,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [12,19], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [13,19], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [14,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [15,19], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [16,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,19], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [19,19], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,19], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,19], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [22,19], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [23,19], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [24,19], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [25,19], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,19], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,19], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [28,19], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,19], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [1,20], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [2,20], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,20], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [4,20], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [5,20], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,20], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [8,20], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,20], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [10,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [11,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [12,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,20], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [15,20], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [16,20], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [17,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,20], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,20], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [20,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,20], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [23,20], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [24,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,20], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [27,20], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,20], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,20], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,21], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [1,21], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [2,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [3,21], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [4,21], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,21], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,21], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [10,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,21], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [23,21], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [24,21], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [25,21], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [26,21], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [27,21], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,21], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,21], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,22], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [1,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,22], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [5,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,22], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [7,22], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [8,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,22], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [10,22], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,22], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [16,22], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [17,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,22], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [19,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,22], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [23,22], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [24,22], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [25,22], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [26,22], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [27,22], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [28,22], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [29,22], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,23], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [1,23], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [2,23], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [3,23], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [4,23], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,23], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,23], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [7,23], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [8,23], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [9,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [11,23], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [12,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,23], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [14,23], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,23], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [16,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,23], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,23], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [19,23], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [20,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,23], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [22,23], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [23,23], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [24,23], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [25,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,23], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [27,23], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [28,23], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,23], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [1,24], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [2,24], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [3,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [4,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,24], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [6,24], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [7,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [8,24], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [10,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [11,24], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [12,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [16,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [18,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,24], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [22,24], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [23,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,24], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,24], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [27,24], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,24], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,24], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [0,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [3,25], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [4,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [6,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,25], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,25], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [11,25], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [12,25], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,25], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [14,25], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [15,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,25], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [17,25], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [19,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,25], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [21,25], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [22,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,25], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [24,25], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [25,25], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [26,25], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [27,25], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,25], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [29,25], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [0,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [1,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,26], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [3,26], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [4,26], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [5,26], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [6,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [8,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,26], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [11,26], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [12,26], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,26], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [14,26], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [15,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [18,26], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [19,26], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [20,26], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [21,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [22,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [23,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,26], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [27,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,26], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [29,26], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [0,27], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [1,27], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [3,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [4,27], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [6,27], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [7,27], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [8,27], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [9,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [10,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [11,27], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [12,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [13,27], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [14,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,27], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [16,27], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [17,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [18,27], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [19,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [20,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [22,27], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,27], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,27], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [25,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,27], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [27,27], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [28,27], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [29,27], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [0,28], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [1,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [2,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [3,28], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [4,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [5,28], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [6,28], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [7,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [8,28], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [9,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [10,28], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [11,28], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [12,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [13,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [14,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [15,28], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [16,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [17,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [18,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [19,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [20,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [21,28], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [22,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [23,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [24,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [25,28], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [26,28], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [27,28], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,28], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [29,28], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [0,29], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [1,29], leftWall: 'door', topWall: 'door', terrain: 'none'},\n  {coords: [2,29], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [3,29], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [4,29], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [5,29], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [6,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [7,29], leftWall: 'none', topWall: 'door', terrain: 'none'},\n  {coords: [8,29], leftWall: 'none', topWall: 'wall', terrain: 'none'},\n  {coords: [9,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [10,29], leftWall: 'door', topWall: 'none', terrain: 'none'},\n  {coords: [11,29], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [12,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [13,29], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [14,29], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [15,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [16,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [17,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [18,29], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [19,29], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [20,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [21,29], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [22,29], leftWall: 'wall', topWall: 'none', terrain: 'none'},\n  {coords: [23,29], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [24,29], leftWall: 'door', topWall: 'wall', terrain: 'none'},\n  {coords: [25,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [26,29], leftWall: 'wall', topWall: 'wall', terrain: 'none'},\n  {coords: [27,29], leftWall: 'none', topWall: 'none', terrain: 'none'},\n  {coords: [28,29], leftWall: 'wall', topWall: 'door', terrain: 'none'},\n  {coords: [29,29], leftWall: 'wall', topWall: 'none', terrain: 'none'}\n];\n\nexport default level1Data;","const levelOneRoomInitData: {[key: number]: RoomInitData} = {\n  0: { monsterGroupIds: [0] },\n  1: { monsterGroupIds: [1] },\n  2: { monsterGroupIds: [2] },\n  3: { monsterGroupIds: [3], description: 'There\\'s been a major spillage of some unpleasant oily muck here.\\nThe cleanup crew mutter something under their breath and give you a surly look.\\nBest not tarry.' }\n};\n\nexport default levelOneRoomInitData;","const monsters: {[key: number]: MonsterItem} = {\n  0: { name: 'Larcener', hp: 8, atk: 7, def: 5, xp: 5, gold: 10, guild: 2, maxLevel: 1, profileImage: '/murdur-rpg-system/images/monsters/mad-wolf.jpg', alignment: 'evil', canSteal: true, stats: {strength: 5, intelligence: 5, wisdom: 5,constitution: 5,charisma: 5, dexterity: 5} },\n  1: { name: 'Bandit', hp: 10, atk: 9, def: 8, xp: 10, gold: 20, guild: 2, maxLevel: 1, profileImage: '/murdur-rpg-system/images/monsters/mad-wolf.jpg', alignment: 'evil', canSteal: true, stats: {strength: 5, intelligence: 5, wisdom: 5,constitution: 5,charisma: 5, dexterity: 5} },\n  2: { name: 'Corridor Cleaner', hp: 12, atk: 9, def: 9, xp: 8, guild: 0, maxLevel: 1, gold: 2, profileImage: '/murdur-rpg-system/images/monsters/mad-wolf.jpg', alignment: 'good', canSteal: false, stats: {strength: 5, intelligence: 5, wisdom: 5,constitution: 5,charisma: 5, dexterity: 5} }\n}\n\nconst monsterGroups: {[key: number]: MonsterGroup} = {\n  0: { name: 'Single Thief', groups: [{ monsterId: 0, minCount: 1, maxCount: 1 }]},\n  1: { name: 'Den of Thieves', groups: [{ monsterId: 1, minCount: 1, maxCount: 3 },{ monsterId: 0, minCount: 1, maxCount: 5 }]},\n  2: { name: 'Isolated Sweeper', groups: [{ monsterId: 2, minCount: 1, maxCount: 1 }]},\n  3: { name: 'Cleaning Crew', groups: [{ monsterId: 2, minCount: 2, maxCount: 6 }]}\n}\n\nexport class MonsterStore {\n  monsters = monsters;\n  monsterGroups = monsterGroups;\n}\n\nconst monsterStore = new MonsterStore();\n\nexport default monsterStore;\n\n// { name: '', xp: 1, hp: 10, atk: 2, def: 2, profileImage: '/murdur-rpg-system/images/monsters/', alignment: 'good', canSteal: false }\n// stats: {strength: 5, intelligence: 5, wisdom: 5,constitution: 5,charisma: 5, dexterity: 5}","export function getCount(minCount: number, maxCount: number): number {\n  return Math.round(Math.random() * (maxCount - minCount) + minCount);\n}\n\nexport function getPlusMinusTwentyPercentInteger(integerAmount: number): number {\n  const multiplyingFactor = 1 + (Math.random() * 0.4 - 0.2);\n  return Math.round(integerAmount * multiplyingFactor);\n}\n\nexport function getRandomFromList(list: any[]): any {\n  return !list.length ? undefined : list[Math.round(Math.random() * (list.length - 1))];\n}\n","import level1Data from '../data/levels/level1';\nimport levelOneRoomInitData from '../data/rooms/level1';\nimport monsterStore from '../stores/monster';\nimport { getCount, getPlusMinusTwentyPercentInteger, getRandomFromList } from '../utils/numbers';\n\ninterface Chest {\n  trapType: 'none' | 'poison' | 'explosive';\n  gold: number;\n  itemIds: number[];\n}\n\nexport default class LevelMap {\n  levelSections: SectionData[] = [];\n  levelRooms: {[key: string]: RoomData} = {};\n  level: number;\n  size: number;\n  discoveredSections: { [key: string]: DiscoveredSection } = {};\n  setAllMapDiscovered: boolean;\n\n  constructor(level = 1, size = 30, randomise = true, setAllMapDiscovered = false) {\n    this.level = level;\n    this.size = size;\n    this.setAllMapDiscovered = setAllMapDiscovered;\n    if (randomise) { this.randomlyPopulateMap() }\n    else {\n      this.populateMap();\n      this.populateRooms();\n    }\n    this.populateDiscoveredSections();\n  }\n\n  public markSectionDiscovered = (coords: MapLocation) => {\n    this.discoveredSections[`${coords[0]}-${coords[1]}`] = { tile: true, modifier: true, leftWall: true, topWall: true };\n    if(this.discoveredSections[`${coords[0] + 1}-${coords[1]}`]) {\n      this.discoveredSections[`${coords[0] + 1}-${coords[1]}`].leftWall = true;\n    }\n    if(this.discoveredSections[`${coords[0]}-${coords[1] + 1}`]) {\n      this.discoveredSections[`${coords[0]}-${coords[1] + 1}`].topWall = true;\n    }\n  }\n\n  public isSectionDiscovered = (coords: MapLocation) => {\n    return this.discoveredSections[`${coords[0]}-${coords[1]}`] ? this.discoveredSections[`${coords[0]}-${coords[1]}`].tile : false;\n  }\n\n  private populateMap = () => {\n    this.levelSections = level1Data as SectionData[];\n  }\n\n  private randomlyPopulateMap = () => {\n    for(var ycord = 0; ycord < this.size; ycord++) {\n      for(var xcord = 0; xcord < this.size; xcord++) {\n        this.levelSections.push({coords: [xcord, ycord], leftWall: this.getRandomWall(), topWall: this.getRandomWall(), terrain: this.getRandomTerrain()});\n      }\n    }\n  }\n\n  private populateRooms = () => {\n    for (const roomKey in levelOneRoomInitData) {\n      this.populateRoom(parseInt(roomKey), levelOneRoomInitData[roomKey]);\n    }\n  }\n\n  private populateRoom = (roomKey: number, roomInitData: RoomInitData) => {\n    if(!roomInitData) {\n      return;\n    }\n    const monsterGroupId = getRandomFromList(roomInitData.monsterGroupIds);\n    if(typeof monsterGroupId !== 'number') {\n      return;\n    }\n    const monsterGroup = monsterStore.monsterGroups[monsterGroupId]\n    this.levelRooms[roomKey] = {\n      currentFighter: undefined,\n      description: roomInitData.description,\n      id: roomKey,\n      groups: monsterGroup.groups.map(group => ({\n        monsterId: group.monsterId,\n        monster: monsterStore.monsters[group.monsterId],\n        monsterHealth: [...Array(getCount(group.minCount, group.maxCount))].map(monster => getPlusMinusTwentyPercentInteger(monsterStore.monsters[group.monsterId].hp)),\n        monsterStatus: 'none'}))\n    }\n  }\n\n  private populateDiscoveredSections = () => {\n    for(var ycord = 0; ycord < this.size; ycord++) {\n      for(var xcord = 0; xcord < this.size; xcord++) {\n        this.discoveredSections[`${xcord}-${ycord}`] = this.setAllMapDiscovered ?\n          { tile: true, modifier: true, leftWall: true, topWall: true } : \n          { tile: false, modifier: false, leftWall: false, topWall: false };\n      }\n    }\n  }\n\n  private getRandomWall = (): string => {\n    const randomWall = Math.round(1 + Math.random() * 4);\n    return randomWall >= 4 ? 'wall' : randomWall === 1 ? 'door' : 'none';\n  }\n\n  private getRandomTerrain = (): string => {\n    switch(Math.round(1 + Math.random() * 6)) {\n      case 1:\n        return 'sand';\n      case 2:\n        return 'water';\n      default:\n        return 'none';\n    }\n  }\n}\n","export const boundingOffsetMap: {[key: string]: [number, number]} = {\n  west: [0,0],\n  north: [0,0],\n  east: [1,0],\n  south: [0,1]\n};\n\nexport const offsetMap: {[key: string]: [number, number]} = {\n  west: [-1,0],\n  north: [0,-1],\n  east: [1,0],\n  south: [0,1]\n};\n\nexport const movementOffsetMap: {[key: string]: [number, number]} = {\n  west: [-1,0],\n  north: [0,-1],\n  east: [1,0],\n  south: [0,1]\n};\n\nexport const clockwiseRotationMap: {[key: string]: Direction} = {\n  'west': 'north',\n  'north': 'east',\n  'east': 'south',\n  'south': 'west'\n};\n\nexport const counterClockwiseRotationMap: {[key: string]: Direction} = {\n  'west': 'south',\n  'north': 'west',\n  'east': 'north',\n  'south': 'east'\n};\n\nexport const turnAroundMap: {[key: string]: Direction} = {\n  'west': 'east',\n  'north': 'south',\n  'east': 'west',\n  'south': 'north'\n};\n","import { action, observable } from 'mobx';\nimport { getCookie, setCookie } from '../utils/cookie';\nimport LevelMap from '../dataObjects/LevelMap';\nimport { boundingOffsetMap } from '../constants';\n\nexport class LevelStore {\n  @observable useRandomMaps: boolean;\n  @observable level1: LevelMap;\n  constructor() {\n    this.useRandomMaps = this.checkForRandomMaps();\n    this.level1 = new LevelMap(1, 30, this.useRandomMaps, false);\n  }\n\n  @action reset = (startLocation: MapLocation) => {\n    this.level1 = new LevelMap(1, 30, this.useRandomMaps, false);\n    this.markSectionDiscovered(startLocation);\n  }\n\n  @action markSectionDiscovered = (\n    coords: MapLocation\n  ) => {\n    this.level1.markSectionDiscovered(coords);\n  }\n\n  getWallFace(playerLocation: MapLocation, playerDirection: Direction, offset: [number, number] = [0,0]) {\n    const wallOffset = boundingOffsetMap[playerDirection];\n    const sectionWithWall = this.level1.levelSections.find(section => playerLocation[0] + wallOffset[0] + offset[0] === section.coords[0] && playerLocation[1] + wallOffset[1] + offset[1] === section.coords[1]);\n    if(!sectionWithWall) { return 'wall' }\n    if(playerLocation[0] + wallOffset[0] + offset[0] === 0 && playerDirection === 'west') { return 'wall' }\n    if(playerLocation[1] + wallOffset[1] + offset[1] === 0 && playerDirection === 'north') { return 'wall' }\n    if(playerDirection === 'north' || playerDirection === 'south') {\n      return sectionWithWall!.topWall;\n    } else {\n      return sectionWithWall!.leftWall;\n    }\n  }\n\n  getFloor(playerLocation: MapLocation, offset: [number, number] = [0,0]) {\n    const section = this.level1.levelSections.find(section => playerLocation[0] + offset[0] === section.coords[0] && playerLocation[1] + offset[1] === section.coords[1]);\n    if(section) {\n      return section.terrain;\n    } else {\n      return 'none';\n    }\n  }\n\n  getSectionDiscovered(coords: MapLocation) {\n    return this.level1.discoveredSections[`${coords[0]}-${coords[1]}`];\n  }\n\n  getSectionByCoords(coords: MapLocation) {\n    return this.level1.levelSections.find(section => coords[0] === section.coords[0] && coords[1] === section.coords[1]);\n  }\n\n  checkForRandomMaps(): boolean {\n    if(getCookie('useRandomMaps') === 'true') {\n      return true;\n    } else {\n      setCookie('useRandomMaps', 'false');\n      return false;\n    }\n  }\n\n  toggleRandomMaps = () => {\n    setCookie('useRandomMaps', `${!this.useRandomMaps}`)\n    this.useRandomMaps = !this.useRandomMaps;\n  }\n}\n\nconst levelStore = new LevelStore();\n\nexport default levelStore;","import React from 'react';\nimport { action, observable } from 'mobx';\n\ninterface Message {\n  text: string;\n  type: 'normal' | 'alert';\n}\n\nexport class MessageStore {\n  @observable messages: Message[] = [{text: \"Welcome to MURDUR 0.1!\", type: 'normal'}];\n  public messagePanelScrollRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  public addMessage = (text: string, type: 'normal' | 'alert' = 'normal') => {\n    this.messages.push({text, type});\n    this.scrollMessagesToBottom();\n  }\n\n  private scrollMessagesToBottom = () => {\n    const messagePanelScrollRefElement = this.messagePanelScrollRef.current;\n    if(messagePanelScrollRefElement) {\n      messagePanelScrollRefElement.scrollTop = messagePanelScrollRefElement.scrollHeight\n    }\n  }\n\n  @action clearMessage = () => {\n    this.messages = [{text: \"Welcome to MURDUR 0.1!\", type: 'normal'}];\n  }\n}\n\nconst messageStore = new MessageStore();\n\nexport default messageStore;","import { observable } from 'mobx';\nimport { clockwiseRotationMap, counterClockwiseRotationMap, turnAroundMap} from '../constants';\n\nconst startLocation: MapLocation = [15,15];\n\nconst defaultStats: Stats = {\n  strength: 10,\n  dexterity: 10,\n  intelligence: 10,\n  wisdom: 10,\n  constitution: 10,\n  charisma: 10,\n};\n\nconst defaultInventory: InventoryedItems[] = [{itemId: 0},{itemId: 1, alignment: 'good'},{itemId: 2},{itemId: 3},{itemId: 4, alignment: 'neutral'}];\n\nconst playerDefaults: PlayerDefaults = {\n  age: 20,\n  level: 1,\n  maxHits: 20,\n  currentHits: 20,\n  experience: 0,\n  gold:0,\n  stats: {...defaultStats},\n  playerLocation: ([...startLocation] as MapLocation),\n  playerDirection: 'north',\n  playerInventory: [...defaultInventory],\n  equippedRightHand: undefined,\n  equippedLeftHand: undefined,\n  equippedHelmet: undefined,\n  equippedBodyArmour: undefined,\n  equippedHandArmour: undefined,\n  guild: 0,\n  guilds: {0: 1}\n}\n\nexport class PlayerStore {\n  @observable age: number = 20;\n  @observable alignment: Alignment = 'good';\n  @observable race: string = 'elf';\n  @observable sex: string = 'female';\n  @observable level: number = 1;\n  @observable maxHits: number = 20;\n  @observable currentHits: number = 2;\n  @observable experience: number = 1;\n  @observable gold: number = 0;\n  @observable atk: number;\n  @observable def: number;\n  @observable stats: Stats = {\n    strength: 10,\n    dexterity: 10,\n    intelligence: 10,\n    wisdom: 10,\n    constitution: 10,\n    charisma: 10,\n  };\n  @observable playerLocation: MapLocation = [15,15];\n  @observable playerDirection: Direction = 'north';\n  @observable playerInventory: { itemId: number, alignment?: Alignment }[] = [];\n  @observable equippedRightHand?: number;\n  @observable equippedLeftHand?: number;\n  @observable equippedHelmet?: number;\n  @observable equippedBodyArmour?: number;\n  @observable equippedHandArmour?: number;\n  @observable maxLevel: number = 1;\n  @observable guild: number = 0;\n  @observable guilds: {[key: number]: number} = {\n    0: 1,\n  };\n\n  constructor() {\n    this.loadDefaults();\n    this.atk = this.calculateAtk();\n    this.def = this.calculateDef();\n  }\n\n  public loadDefaults() {\n    Object.assign(this, playerDefaults);\n  }\n\n  public setPlayerLocation = (playerLocation: MapLocation) => {\n    this.playerLocation = playerLocation;\n  }\n\n  public rotatePlayerClockwise = () => {\n    this.playerDirection = clockwiseRotationMap[this.playerDirection];\n  }\n\n  public rotatePlayerCounterClockwise = () => {\n    this.playerDirection = counterClockwiseRotationMap[this.playerDirection];\n  }\n\n  public turnAround = () => {\n    this.playerDirection = turnAroundMap[this.playerDirection];\n  }\n\n  public setDead = () => {\n    this.currentHits = 0;\n  }\n\n  public hurtPlayer = (damage: number) => {\n    this.currentHits -= damage;\n  }\n\n  public calculateAtk = (): number => {\n    return this.stats.strength;\n  }\n\n  public calculateDef = (): number => {\n    return this.stats.dexterity;\n  }\n}\n\nconst playerStore = new PlayerStore();\n\nexport default playerStore;","import * as React from 'react';\n\nimport audioStore from '../stores/audio';\nimport gameStateStore from '../stores/gameState';\nimport itemsStore from '../stores/items';\nimport levelStore from '../stores/levels';\nimport messageStore from '../stores/messages';\nimport monsterStore from '../stores/monster';\nimport playerStore from '../stores/player';\n\nconst gameContextDefaultValue = {\n  audioStore,\n  gameStateStore,\n  itemsStore,\n  levelStore,\n  messageStore,\n  monsterStore,\n  playerStore,\n};\n\nconst gameContext = React.createContext(gameContextDefaultValue);\n\nexport default gameContext;\nexport type GameContext = typeof gameContext;\nexport type GameContextValue = typeof gameContextDefaultValue;\n\nexport abstract class ComponentWithGameContext<P = {}, S = {}, SS = any>\n  extends React.Component<P, S, SS> {\n  static contextType = gameContext;\n  context!: React.ContextType<GameContext>;\n};\n","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\n@observer \nclass AudioPlayer extends ComponentWithGameContext {\n  render() {\n    const {audioStore} = this.context;\n    return <>\n      <audio ref={audioStore.playerAudioRef} />\n    </>;\n  }\n}\n\nexport default AudioPlayer;","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\n@observer \nclass GlobalControls extends ComponentWithGameContext {\n  render() {\n    const {audioStore, levelStore} = this.context;\n    return <div className=\"global-controls\">\n      <div className=\"toggle-random-map\" onClick={levelStore.toggleRandomMaps}>\n        {levelStore.useRandomMaps ? \n          <img src=\"/murdur-rpg-system/images/unlocked.png\" alt=\"using random maps\"/> :\n          <img src=\"/murdur-rpg-system/images/locked.png\" alt=\"using preset maps\"/>}\n      </div>\n      <div className=\"toggle-audio-button\" onClick={audioStore.toggleAudioOn}>\n        {audioStore.soundEnabled ? \n          <img src=\"/murdur-rpg-system/images/audioOn.png\" alt=\"switch audio on/off\"/> :\n          <img src=\"/murdur-rpg-system/images/audioOff.png\" alt=\"switch audio on/off\"/>}\n      </div>\n    </div>;\n  }\n}\n\nexport default GlobalControls;\n","import React from 'react';\n\nconst Header = () => <div></div>\n\nexport default Header;","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\n@observer \nclass CharacterInfoPanel extends ComponentWithGameContext {\n  render() {\n    const {playerStore} = this.context;\n    const currentLevel = playerStore.guilds[playerStore.guild];\n    return <div className=\"character-info-panel\">\n      <div className=\"character-alignment\">\n        {`${playerStore.sex} ${playerStore.race} (${playerStore.alignment}) (${currentLevel})`}\n      </div>\n      <ul className=\"character-current-info\">\n        <li key=\"age\">\n          <span>Age</span>\n          <span>{playerStore.age}</span>\n        </li>\n        <li key=\"hits\">\n          <span>Hits</span>\n          <span>{`${playerStore.currentHits}/${playerStore.maxHits}`}</span>\n        </li>\n        <li key=\"xp\">\n          <span>Experience</span>\n          <span>{playerStore.experience}</span>\n        </li>\n        <li key=\"gold\">\n          <span>Gold</span>\n          <span>{playerStore.gold}</span>\n        </li>\n      </ul>\n      <ul className=\"character-stats\">\n        <li key=\"strength\">\n          <span>Strength</span>\n          <span>{playerStore.stats.strength}</span>\n        </li>\n        <li key=\"intelligence\">\n          <span>Intelligence</span>\n          <span>{playerStore.stats.intelligence}</span>\n        </li>\n        <li key=\"wisdom\">\n          <span>Wisdom</span>\n          <span>{playerStore.stats.wisdom}</span>\n        </li>\n        <li key=\"constitution\">\n          <span>Constitution</span>\n          <span>{playerStore.stats.constitution}</span>\n        </li>\n        <li key=\"charisma\">\n          <span>Charisma</span>\n          <span>{playerStore.stats.charisma}</span>\n        </li>\n        <li key=\"dexterity\">\n          <span>Dexterity</span>\n          <span>{playerStore.stats.dexterity}</span>\n        </li>\n      </ul>\n    </div>;\n  }\n}\n\nexport default CharacterInfoPanel;\n","import React from 'react';\nimport CharacterInfoPanel from './CharacterInfoPanel';\n\nconst tabs = [\n  {name: \"Stats\", id: 'stats'},\n  {name: \"Resist\", id: 'resist'},\n  {name: \"Char\", id: 'char'},\n  {name: \"Guild\", id: 'guild'}\n];\n\nexport default class CharacterStats extends React.Component<{}, {activeTab: string}> {\n  constructor(props: {}) {\n      super(props);\n\n      this.state = {\n        activeTab: 'stats'\n      };\n  }\n\n  changeTab = (activeTab: string) => {\n    this.setState({activeTab});\n  }\n\n  render() {\n    const {activeTab} = this.state;\n    return <div className=\"character-stats\">\n      <div className=\"character-name\">Reggie Plop Plops</div>\n      <div className=\"top-tabs\">\n        {tabs.map(tabInfo => \n          <div key={\"stats-tabs-\" + tabInfo.id} className={`tab ${activeTab === tabInfo.id ? 'active' : ''}`} \n            onClick={() => {this.changeTab(tabInfo.id)}}>{tabInfo.name}</div>)}\n      </div>\n      {activeTab === 'stats' && <CharacterInfoPanel />}\n    </div>;\n  }\n}\n\n//<div className=\"\"></div>","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { clockwiseRotationMap, counterClockwiseRotationMap, movementOffsetMap, offsetMap} from '../constants';\nimport {isUndefined} from 'lodash';\nimport { observer } from \"mobx-react\";\n\nconst comboCoordinates = function(offsetOne: [number, number], offsetTwo: [number,number]): [number, number] {\n  return [offsetOne[0] + offsetTwo[0], offsetOne[1] + offsetTwo[1]];\n}\n\n@observer \nclass EncounterPane extends ComponentWithGameContext {\n  getWallFaces = () => {\n    const {levelStore, playerStore} = this.context;\n    const {playerLocation, playerDirection} = playerStore;\n    return {\n      front: levelStore.getWallFace(playerLocation, playerDirection),\n      frontLeft: levelStore.getWallFace(comboCoordinates(playerLocation, offsetMap[counterClockwiseRotationMap[playerDirection]]), playerDirection),\n      frontRight: levelStore.getWallFace(comboCoordinates(playerLocation, offsetMap[clockwiseRotationMap[playerDirection]]), playerDirection),\n      forwardFront: levelStore.getWallFace(playerLocation, playerDirection, movementOffsetMap[playerDirection]),\n      forwardFrontLeft: levelStore.getWallFace(comboCoordinates(playerLocation, offsetMap[counterClockwiseRotationMap[playerDirection]]), playerDirection, movementOffsetMap[playerDirection]),\n      forwardFrontRight: levelStore.getWallFace(comboCoordinates(playerLocation, offsetMap[clockwiseRotationMap[playerDirection]]), playerDirection, movementOffsetMap[playerDirection]),\n      left: levelStore.getWallFace(playerLocation, counterClockwiseRotationMap[playerDirection]),\n      forwardLeft: levelStore.getWallFace(playerLocation, counterClockwiseRotationMap[playerDirection], movementOffsetMap[playerDirection]),\n      right: levelStore.getWallFace(playerLocation, clockwiseRotationMap[playerDirection]),\n      forwardRight: levelStore.getWallFace(playerLocation, clockwiseRotationMap[playerDirection], movementOffsetMap[playerDirection]),\n    }\n  }\n\n  getFloors = () => {\n    const {levelStore, playerStore} = this.context;\n    const {playerLocation, playerDirection} = playerStore;\n    return {\n      left: levelStore.getFloor(comboCoordinates(playerLocation, offsetMap[counterClockwiseRotationMap[playerDirection]])),\n      front: levelStore.getFloor(playerLocation),\n      right: levelStore.getFloor(comboCoordinates(playerLocation, offsetMap[clockwiseRotationMap[playerDirection]])),\n      forwardLeft: levelStore.getFloor(comboCoordinates(playerLocation, offsetMap[counterClockwiseRotationMap[playerDirection]]), movementOffsetMap[playerDirection]),\n      forward: levelStore.getFloor(playerLocation, movementOffsetMap[playerDirection]),\n      forwardRight: levelStore.getFloor(comboCoordinates(playerLocation, offsetMap[clockwiseRotationMap[playerDirection]]), movementOffsetMap[playerDirection]),\n    }\n  }\n\n  getCurrentRoom = () => {\n    const { gameStateStore } = this.context;\n    return gameStateStore.currentRoom;\n  }\n\n  getCombatMessage(attacker: string, attackResult: AttackResult | undefined): string {\n    if(attackResult === 'missed') {\n      return `${attacker} missed!`;\n    } else if (attackResult === 'kill') {\n      return `${attacker} killed one!`;\n    } else if(!isUndefined(attackResult)) {\n      return `${attacker} hit for ${attackResult} damage`;\n    } else {\n      return '';\n    }\n  }\n\n  render() {\n    const {gameStateStore, playerStore} = this.context;\n    const wallFaces = this.getWallFaces();\n    const floors = this.getFloors();\n    const roomData = this.getCurrentRoom();\n\n    return <div className=\"expore-encounter\">\n      <div className=\"location-info\">\n        <p className=\"location-direction\">\n          {`${playerStore.playerLocation[0]},${playerStore.playerLocation[1]},1 ${playerStore.playerDirection}`}\n        </p>\n        <div className=\"fps-view\">\n          <div className={`fps-square walls left ${wallFaces.left}`}/>\n          <div className={`fps-square walls left forward ${wallFaces.forwardLeft}`}/>\n          <div className={`fps-square walls front front-left ${wallFaces.frontLeft}`}/>\n          <div className={`fps-square walls front ${wallFaces.front}`} />\n          <div className={`fps-square walls front forward ${wallFaces.forwardFront}`} />\n          <div className={`fps-square walls front forward-left ${wallFaces.forwardFrontLeft}`} />\n          <div className={`fps-square walls front forward-right ${wallFaces.forwardFrontRight}`} />\n          <div className={`fps-square walls right ${wallFaces.right}`} />\n          <div className={`fps-square walls right forward ${wallFaces.forwardRight}`} />\n          <div className={`fps-square walls front front-right ${wallFaces.frontRight}`}/>\n          <div className={`fps-square floor left ${floors.left}`}/>\n          <div className={`fps-square floor front ${floors.front}`}/>\n          <div className={`fps-square floor right ${floors.right}`}/>\n          <div className={`fps-square floor left forward ${floors.forwardLeft}`}/>\n          <div className={`fps-square floor forward ${floors.forward}`}/>\n          <div className={`fps-square floor right forward ${floors.forwardRight}`}/>\n        </div>\n      </div>\n      {roomData && roomData.groups.length ?\n        <div className=\"encounter-info\">\n          <div className=\"encounter-images\">\n            <div className={`monster-disposition ${roomData.isFighting ? \"fight\" : \"peace\"}`}><img src=\"/murdur-rpg-system/images/fighting.png\" alt={roomData.isFighting ? \"Fight!\" : \"Friends!\"}/></div>\n            <div className=\"monster-portrait\"><img src={roomData.groups[0].monster.profileImage} alt={roomData.groups[0].monster.name} /></div>\n            <div className=\"monster-fight-info\">\n              <p>{this.getCombatMessage('You', gameStateStore.currentPlayerAttackResult)}</p>\n              <p>{this.getCombatMessage('Monster', gameStateStore.currentMonsterAttackResult)}</p>\n            </div>\n            <div className=\"chest\"></div>\n          </div>\n          <div className=\"monster-list\">\n            <ol>\n              {roomData.groups.map((group, index) => \n                <li key={'monster-group-' + index}>{`${group.monsterHealth.length} ${roomData.groups[index].monster.name}${group.monsterHealth.length > 1 ? 's' : ''}`}</li>)}\n            </ol>\n          </div>\n        </div> :\n        <div className=\"encounter-info\"> </div>\n      }\n    </div>\n  }\n}\n\nexport default EncounterPane;\n","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\n@observer \nclass InventoryPanel extends ComponentWithGameContext {\n  render() {\n    const { itemsStore, playerStore } = this.context;\n    return <div className=\"character-inventory\">\n      <ol className=\"character-inventory-list\">\n        {playerStore.playerInventory.map((inventoryItem, inventoryIndex) => {\n          const item = itemsStore[inventoryItem.itemId];\n          return !!item ? <li key={\"inventory-\" + inventoryIndex}>{`${item.name} ${inventoryItem.alignment ? '(' + inventoryItem.alignment.charAt(0)+')' : ''}`}</li> : null})}\n      </ol>\n    </div>;\n  }\n}\n\nexport default InventoryPanel;\n","// type EquipmentType = 'weapon' | 'head-armour' | 'body-armour' | 'hand-armour' | 'shield';\n\n// interface InventoryItem {\n//   name: string;\n//   baseValue: number;\n//   alignment?: Alignment;\n//   canBeEquiped: boolean;\n//   equipmentType?: EquipmentType;\n// }\n\ninterface Guild {\n  name: string;\n  xpScale: number;\n  guildFightingMod: number;\n};\n\nconst guildsStore: {[key: number]: Guild} = {\n  0: {name: 'Nomad', xpScale: 1, guildFightingMod: 0.7},\n  1: {name: 'Warrior', xpScale: 1, guildFightingMod: 1.2},\n  2: {name: 'Thieves', xpScale: 1, guildFightingMod: 0.85},\n}\n\nexport default guildsStore;\n\n// {name: 'Nomad', xpScale: 1, guildFightingMod: 0.7},","import {PlayerStore} from '../stores/player';\nimport guildStore from '../stores/guilds';\ntype AttackerDefender = MonsterItem | PlayerStore;\n\nexport function getGuildFightingMod(attacker: AttackerDefender): number {\n  return guildStore[attacker.guild].guildFightingMod;\n}\n\nexport function guildLevelDamageModifier(guildLevel: number) {\n  // LvlMod = (Ln(GLvl + 5) + 1) / Ln(1.2)\n  return (Math.log(guildLevel + 5) + 1) / Math.log(1.2);\n}\n\nexport function calculateStrengthValue(strengthStat: number): number {\n  // Int(Strength - (LN(Strength) * ((LN(Strength) - 2,4) * 2,25))) + 1\n  return Math.floor(\n    strengthStat\n    - (Math.log(strengthStat) * ((Math.log(strengthStat) - 2.4) * 2.25))\n    + 1\n  );\n}\n\nexport function strengthModifierOne(strengthValue: number) : number {\n  // StrMod1 = Int((Rnd * ((BSV + 10) / 2)) + ((BSV + 10) / 4)) / 10\n  return Math.floor(\n    (Math.random() * ((strengthValue + 10) / 2)) + ((strengthValue + 10) / 4)\n  ) / 10;\n}\n\nexport function strengthModifierTwo(strengthValue: number) : number {\n  // StrMod2 = BSV/30\n  return strengthValue / 30;\n}\n\nexport function getDamageModifier(attacker: AttackerDefender) {\n  const damageModifer = 0.6 + (((Math.log(100 + attacker.maxLevel) / 1.75) - 2.3) * Math.pow(getGuildFightingMod(attacker), 2) / 2)\n  // 1: DamMod = 0.6 + (((Ln(100 + GLvl) / 1.75) - 2.3) * FightingMod^2 / 2)\n  // do these later\n  // 2: * WeaponModifier\n  // 3: + 5 if Critical Hit, Chance see below\n  // 4: + 2 if Backstab, Chance see below\n  // 5: / 2 if Monster is invisible and character can't see invisible\n  // 6: +0.1/-0.1 per size bigger/smaller than monster\n  return damageModifer > 1 ? damageModifer - Math.pow(Math.log(damageModifer), 2) : damageModifer;\n  // 7: if DamMod is > 1, then DamMod = DamMod - ln(DamMod)^2\n}\n\nexport function calculateFightDamage(attacker: AttackerDefender,  defender: AttackerDefender) {\n  const strengthValue = calculateStrengthValue(attacker.stats.strength);\n  return Math.round((guildLevelDamageModifier(attacker.maxLevel) * strengthModifierOne(strengthValue) * strengthModifierTwo(strengthValue) * getDamageModifier(attacker)) \n    - Math.floor(1 + Math.random() * (defender.def - attacker.atk)/8));\n}\n/*\nGLvl = Guild Level with best fighting ability, should be the same as the one in \"Guild\" Tab\nFightingMod = Value found in Help File / 10, i.e., Warrior = 1.2, Nomad = 0.7\nSize = Range [0 to 5] or Very Small, Small, Normal, Big, Very Big, Huge\nLn stands for natural logarithm.\nRnd is a number ranging from 0 to 0.999.. (not 1, this is important because it produces different top values).\n\nThis is the Damage Modifier, a bit more complex than I expected really\n1: DamMod = 0.6 + (((Ln(100 + GLvl) / 1.75) - 2.3) * FightingMod^2 / 2)\n2: * WeaponModifier\n3: + 5 if Critical Hit, Chance see below\n4: + 2 if Backstab, Chance see below\n5: / 2 if Monster is invisible and character can't see invisible\n6: +0.1/-0.1 per size bigger/smaller than monster\n7: if DamMod is > 1, then DamMod = DamMod - ln(DamMod)^2\nValue 0.1 to 7ish (Lv 999 Human Warrior with a Mod 2.6 Weapon, severing a Tiny monster)\n\nLet's get the Strength Modifier, it's actually 2 parts, and requires a new Strength Value (called BSV here)\nBSV = Int(Strength - (LN(Strength) * ((LN(Strength) - 2,4) * 2,25))) + 1\nStrMod1 = Int((Rnd * ((BSV + 10) / 2)) + ((BSV + 10) / 4)) / 10\nStrMod2 = BSV/30\nStr 1 to 40 -> Value [0.3-0.8 * 0.06667] to [1-2.9 * 1] Note, this value is the 2 StrMods combined\n\nAnd last part of formula, Level Modifier.\nLvlMod = (Ln(GLvl + 5) + 1) / Ln(1.2)\nLvl 1 to 999 -> Value 15.31228 to 43.39447\n\nBase Damage = LvlMod * StrMod1 * StrMod2 * DamMod\nFinal Damage = Base - Rnd[1 to (Def-Atk)/8] or very close to this\nDefense bug lurks though, so it's just:\nFinal Damage = Base + Rnd[1 to Atk/8]\n*/\n\nexport function chanceToHit(atk: number, def: number):number {\n  const divisor = atk > def ? atk : def;\n  return 0.5 * (1 + (atk - def)/divisor);\n}\n// Monster Chance To Hit\n// If MonAtk = CharDef: %Chance = 50\n// If MonAtk > CharDef: %Chance = 50 + (50 * (MonAtk - CharDef) / MonAtk)\n// If MonAtk < CharDef: %Chance = 50 - (50 * (CharDef - MonAtk) / CharDef)\n// Minimum 2%, Maximum 98%\n\n// export function criticalChance(attackerLevel: number, defenderLevel: number): number {\n//   return Math.log((attackerLevel / 999) + 1) * 100\n// }\n\n// ((((LN((GLvl / 999) + 1) * 100) * LN(CritMod + 1)) / 3) - (LN((MonLvl / 999) + 1)) * 100))/2 + Ln(ItemDropLevel+1) * Ln(10)\n\n// Minimum 1% (if the character has any critical hit ability) or whatever the weapon's crit % is (see below)\n// Maximum 50% (although 33.1% is the highest that can be achieved in-game)\n\n// CritMod = Value found in Help File, i.e., Warrior = 9, Seeker = 3\n\n// Backstab\n// ((((LN((GLvl / 999) + 1) * 100) * LN(BSMod + 1)) / 3) - (LN((MonLvl / 999) + 1)) * 100))/2 + Ln(ItemDropLevel+1) * Ln(100)\n\n// Minimum 2% (if the character has any backstab ability) or whatever the weapon's backstab % is (see below)\n// Maximum 75% (although 39.4% is the maximum that can be achieved in-game)\n\n// BSMod = Value found in Help File, i.e, Thief = 9, Ninja = 2","import {toJS} from 'mobx';\nimport {isUndefined} from 'lodash';\nimport audioStore from '../stores/audio';\nimport playerStore from '../stores/player';\nimport gameStateStore from '../stores/gameState';\nimport levelStore from '../stores/levels';\n// import monsterStore from '../stores/monster';\nimport messageStore from '../stores/messages';\nimport { boundingOffsetMap, movementOffsetMap } from '../constants';\nimport { calculateFightDamage } from '../utils/combat';\n\nconst keyDirection: {[key: number]: string} = {\n  37: 'counter-clockwise',\n  38: 'forward',\n  39: 'clockwise',\n  40: 'backward',\n  70: 'fight' // f key\n}\n\nexport class ExploreController {\n  handleKeyDown = (event: KeyboardEvent) => {\n    // console.log('KEYCODE: ', event.keyCode);\n    if(gameStateStore.gameState === 'EXPLORE') {\n      const direction = keyDirection[event.keyCode];\n      switch(direction) {\n        case 'fight':\n          gameStateStore.startFight('player');\n          this.fight();\n          break;\n        case 'counter-clockwise':\n          playerStore.rotatePlayerCounterClockwise();\n          break;\n        case 'clockwise':\n          playerStore.rotatePlayerClockwise();\n          break;\n        case 'backward':\n          playerStore.turnAround();\n          break;\n        case 'forward':\n          if(this.moveDirection(playerStore.playerDirection)) {\n            messageStore.addMessage(`You walked ${playerStore.playerDirection.toUpperCase()}`);\n          } else {\n            audioStore.playAudio('player', 'hitwall');\n          };\n          break;\n        default: \n          break;\n      }\n    }\n  }\n\n  moveDirection(direction: Direction) {\n    if (this.checkMoveWallCollision(direction)) {\n      const movementOffset = movementOffsetMap[direction];\n      const playerLocation: MapLocation = [playerStore.playerLocation[0] + movementOffset[0], playerStore.playerLocation[1] + movementOffset[1]];\n      levelStore.level1.markSectionDiscovered(playerLocation);\n      playerStore.setPlayerLocation(playerLocation);\n      this.checkAndChangeRoom(playerLocation);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  checkAndChangeRoom(playerLocation: MapLocation) {\n    const levelSection = levelStore.getSectionByCoords(playerLocation);\n    const newRoomId = !!levelSection ? levelSection.roomId : 'empty';\n    const currentRoomId = gameStateStore.currentRoom ? gameStateStore.currentRoom.id : undefined;\n    const newRoom = newRoomId !== 'empty' ? levelStore.level1.levelRooms[newRoomId!] : undefined;\n\n    if(newRoomId !== currentRoomId) { // if changing rooms\n      if(!isUndefined(gameStateStore.currentRoom)) {\n        levelStore.level1.levelRooms[gameStateStore.currentRoom.id] = {...gameStateStore.currentRoom!};\n      }\n      const currentFighter = newRoom && !isUndefined(newRoom.currentFighter) ? newRoom.currentFighter : 'player';\n      gameStateStore.setCurrentRoom(newRoom ? {...newRoom, isFighting: this.calculateIsFighting(newRoom), currentFighter} : undefined);\n      if(!isUndefined(newRoom) && newRoom.description) {\n        messageStore.addMessage(newRoom.description);\n      }\n      if(this.calculateIsFighting(newRoom)) {\n        this.fight();\n      }\n    }\n  }\n\n  fight() {\n    const {currentRoom, gameState} = gameStateStore;\n    if(currentRoom) {console.log('Fight !!!!', toJS(currentRoom), currentRoom.isFighting, currentRoom.currentFighter);}\n    if(currentRoom && currentRoom.isFighting && gameState === 'EXPLORE' && !isUndefined(currentRoom.currentFighter)){\n      // fight stuff\n      if(currentRoom.currentFighter === 'player') {\n        const damage = calculateFightDamage(playerStore, currentRoom.groups[0].monster);\n        gameStateStore.setCurrentAttackResult(currentRoom.currentFighter, damage);\n        gameStateStore.hurtcurrentTargettedGroup(damage);\n        gameStateStore.setCurrentFighter(0);\n      } else if (typeof currentRoom.currentFighter === 'number' && currentRoom.groups[currentRoom.currentFighter]) {\n        const damage = calculateFightDamage(currentRoom.groups[currentRoom.currentFighter].monster, playerStore);\n        gameStateStore.setCurrentAttackResult(currentRoom.currentFighter, damage);\n        this.hurtPlayer(damage);\n        if (currentRoom.currentFighter <= currentRoom.groups.length - 2) {\n          gameStateStore.setCurrentFighter((currentRoom.currentFighter + 1)  as 0 | 1 | 2 | 3);\n        } else {\n          gameStateStore.setCurrentFighter('player');\n        }\n      }\n      // setup next move\n      setTimeout(() => {\n        this.fight();\n      }, 1000);\n    }\n  }\n\n  calculateIsFighting(newRoom?: RoomData): boolean {\n    if(newRoom) {\n      if(!isUndefined(newRoom.isFighting)) {\n        return newRoom.isFighting;\n      } else if (newRoom.groups.length){\n        return newRoom.groups[0].monster.alignment !== playerStore.alignment;\n      } else {\n        return false;\n      }\n    }\n    return false;\n  }\n\n  hurtPlayer(damage: number) {\n    if(playerStore.currentHits - damage <= 0) {\n      playerStore.setDead();\n      gameStateStore.setDead();\n    } else {\n      playerStore.hurtPlayer(damage)\n    }\n  }\n\n  checkMoveWallCollision(direction: Direction) {\n    const boundingOffset = boundingOffsetMap[direction];\n    const boundingSection = levelStore.getSectionByCoords([playerStore.playerLocation[0] + boundingOffset[0], playerStore.playerLocation[1] + boundingOffset[1]]);\n    if(direction === 'north' || direction === 'south') {\n      return boundingSection && boundingSection.topWall !== 'wall' && playerStore.playerLocation[1] + boundingOffset[1] >= 1;\n    } else {\n      return boundingSection && boundingSection.leftWall !== 'wall' && playerStore.playerLocation[0] + boundingOffset[0] >= 1;\n    }\n  }\n\n  setupKeyboardListeners() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  removeKeyboardListeners() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n}\n\nconst exploreController = new ExploreController();\n\nexport default exploreController;","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\nimport exploreController from '../controllers/exploreController';\n\ninterface MapPanelState {\n  playerLocation: MapLocation;\n}\n\n@observer \nclass MapPanel extends ComponentWithGameContext<{}, MapPanelState> {  \n  componentWillMount() {\n    this.context.levelStore.level1.markSectionDiscovered(this.context.playerStore.playerLocation);\n  }\n\n  componentDidMount() {\n    exploreController.setupKeyboardListeners();\n  }\n\n  componentWillUnmount() {\n    exploreController.removeKeyboardListeners();\n  }\n\n  render() {\n    const {levelStore, playerStore} = this.context;\n    const {playerLocation, playerDirection} = playerStore;\n    return <div className=\"explore-map\">\n      <div className=\"map-container\" style={{width: levelStore.level1.size * 14, height: levelStore.level1.size * 14}}>\n        {levelStore.level1.levelSections.map(section => {\n          const isPlayerLocation = section.coords[0] === playerLocation[0] && section.coords[1] === playerLocation[1];\n          const isSectionDiscovered = levelStore.getSectionDiscovered(section.coords);\n          const wallClasses = `${isSectionDiscovered.leftWall ? \"wall-left-\"  + section.leftWall : \"\"} ${isSectionDiscovered.topWall ? \"wall-top-\"  + section.topWall : \"\"}`;\n          const sectionClass = isSectionDiscovered.tile ?\n            \"map-square \" + wallClasses + ' discovered-' + section.terrain:\n            \"map-square \" + wallClasses;\n          return <div key={section.coords[0] + \"-\" + section.coords[1]} className={sectionClass}>\n            {isPlayerLocation ? <img src=\"/murdur-rpg-system/images/arrowUp-pink.png\" alt=\"player\" className={\"player-sprite \" + playerDirection} /> : null}\n          </div>;\n        })}\n      </div>\n    </div>;\n  }\n}\n\nexport default MapPanel;\n","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\"\n\n@observer \nclass MessagesPanel extends ComponentWithGameContext {\n  render() {\n    const {messageStore} = this.context;\n    return <div className=\"explore-messages\" ref={messageStore.messagePanelScrollRef}>\n      <ul>\n        {messageStore.messages.map((message, index) => \n          <li key={\"message-\" + index}>{message.text}</li>)}\n      </ul>\n    </div>\n  }\n}\n\nexport default MessagesPanel;\n","import gameStateStore from '../stores/gameState';\nimport levelStore from '../stores/levels';\nimport messageStore from '../stores/messages';\nimport playerStore from '../stores/player';\n\nexport class GameController {\n  public reset() {\n    console.log('reset!!!');\n    playerStore.loadDefaults();\n    levelStore.reset(playerStore.playerLocation);\n    gameStateStore.reset();\n    messageStore.addMessage('You died and were resurrected');\n  }\n}\n\nconst gameController = new GameController();\n\nexport default gameController;","import React from 'react';\nimport { ComponentWithGameContext } from './ComponentWithGameContext';\nimport { observer } from \"mobx-react\";\nimport gameController from '../controllers/gameController';\n\n@observer \nclass DeathModal extends ComponentWithGameContext {\n  render() {\n    return <div className=\"modal-overlay\">\n      <div className=\"modal\">\n        <p>You died</p>\n        <div className=\"modal-death-restart\" onClick={() => {gameController.reset()}}>\n          Ressurect\n        </div>\n      </div>\n    </div>;\n  }\n}\n\nexport default DeathModal;","import React from 'react';\nimport { observer } from \"mobx-react\"\nimport CharacterStats from '../components/CharacterStats';\nimport EncounterPane from '../components/EncounterPane';\nimport InventoryPanel from '../components/InventoryPanel';\nimport MapPanel from '../components/MapPanel';\nimport MessagesPanel from '../components/MessagesPanel';\nimport DeathModal from '../components/DeathModal';\nimport { ComponentWithGameContext } from '../components/ComponentWithGameContext';\n\n@observer\nexport default class ExploreScreen extends ComponentWithGameContext {\n  constructor(props: {}) {\n      super(props);\n      this.state = {\n      };\n  }\n\n  render() {\n    const {gameStateStore} = this.context;\n    return <div className=\"explore-screen\">\n      <div className=\"character-menu\">\n        <CharacterStats />\n        <InventoryPanel />\n        <div className=\"party\"></div>\n      </div>\n      <div className=\"explore-pane\">\n        <EncounterPane />\n        <MapPanel />\n        <MessagesPanel />\n      </div>\n      {gameStateStore.gameState === \"DEAD\" && <DeathModal />}\n    </div>;\n  }\n}\n","import React from 'react';\nimport AudioPlayer from './components/AudioPlayer';\nimport GlobalControls from './components/GlobalControls';\nimport Header from './components/Header';\nimport ExploreScreen from './screens/ExploreScreen';\nimport './main.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <ExploreScreen />\n      <GlobalControls />\n      <AudioPlayer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}